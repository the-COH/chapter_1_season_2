{
  "openapi": "3.0.1",
  "info": {
    "title": "Publishing API",
    "description": "#### Deploy Contract\n\nCreate Collection -> Set CollectionInfo (collection level metadata) -> Set up Sale and Royalty Recipients -> (Optional)\nAdd Terms -> [POST] /Collection/{id}/Deploy\n\n#### Lazy Minting Tokens\n\nAdd Tokens -> Add Token Attributes -> Add main image -> (Optional) Add placeholder token + placeholder attributes +\nplaceholder image -> (Optional) Add media file for token (music, video, animation) -> (Optional) Add additional images\nfor token (carousel of images) -> Add phase/s for tokens (on chain claim conditions) -> (Optional) Add Allowlist for\nphases (also called Whitelist) -> [POST] /Collection/{id}/Mint\n\n#### Resyncing\n\nUpdate existing tokens -> Update token attributes -> Update images and media for token -> Update placeholder -> Update\ncollection level metadata -> Reveal collection -> Update Max Token Supply -> Update phases -> and much more ... (soon)\n-> [POST] /Collection/{id}/Resync\n\n#### Distribution\n\n- Claim tokens on-chain\n- Issue token on demand\n- Issue pre-minted token with Lock mechanism (ideal for FIAT)\n- airdrop, gift and much more coming soon\n\nMore details: [Publishing API documentation](https://docs.aspenft.io/docs/introduction)",
    "version": "v1"
  },
  "paths": {
    "/analytics": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "operationId": "GetAllClientAnalytics",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MintAnalyticsResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MintAnalyticsResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MintAnalyticsResponse"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/analytics": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get the minting analytics for the given collection ID",
        "operationId": "GetCollectionAnalytics",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MintAnalyticsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MintAnalyticsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MintAnalyticsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Creates a JWT Bearer token for authorization",
        "description": "Doesn't need authorization!",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Invalid name or password",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/client": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Create a new client",
        "description": "Only for cedar admin!",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get a list of clients",
        "description": "Only for cedar admin!",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/client/{guid}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get a client by Id",
        "description": "Only for cedar admin!",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Update a client name, change password etc",
        "description": "Only for cedar admin!",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/collection": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Create a new collection",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Get a list of collections",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponsePagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponsePagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponsePagedResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}": {
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Get a collection by Id",
        "operationId": "GetCollectionById",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Collection"
        ],
        "summary": "Patch a collection by ID, using the JSON Patch format.\r\nThis endpoint can be used to update a collection pre or post-deploy.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableCollectionFieldsJsonPatchDocument"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableCollectionFieldsJsonPatchDocument"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableCollectionFieldsJsonPatchDocument"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableCollectionFieldsJsonPatchDocument"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Collection"
        ],
        "summary": "Update a collection by Id",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableCollectionFields"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableCollectionFields"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableCollectionFields"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatableCollectionFields"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Collection"
        ],
        "summary": "Delete a collection by Id",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/collection/{guid}/salerecipients": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Set the sale recipient address along with their shares",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipient"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipient"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipient"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipient"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipient"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipient"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipient"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/royaltyrecipients": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Set the royalty recipient address along with their shares",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipient"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipient"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipient"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Recipient"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipient"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipient"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Recipient"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/tokens": {
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Get a list of tokens for this collection",
        "operationId": "TokensOfCollection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponsePagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponsePagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponsePagedResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/terms": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Upload user terms file",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserTermsResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTermsResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTermsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/terms/enable/{status}": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Enable or disable accept terms",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/terms/{address}": {
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Check if an user has signed the terms",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/placeholder": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Create Placeholder for a collection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceholderRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceholderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceholderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceholderRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Get a placeholder by Collection Id",
        "operationId": "GetPlaceholderById",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceholderResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Collection"
        ],
        "summary": "Update a placeholder by Collection Id",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceholderRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceholderRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceholderRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceholderRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Collection"
        ],
        "summary": "Delete a placeholder",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/placeholder/files/{index}": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Upload a file for the placeholder, where id is Collection id and index starts from 0. Uploading for the same index will replace the existing file.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file",
                  "fileType"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "fileType": {
                    "$ref": "#/components/schemas/FileType"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "fileType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Collection"
        ],
        "summary": "Put a customer resource url as a placeholder, where id is Collection id and index starts from 0. Uploading for the same index will replace the existing file.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PutFileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutFileRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutFileRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Collection"
        ],
        "summary": "Delete a file from the placeholder by it's index",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/placeholder/attributes": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Update the placeholder attributes, it will replace all existing attributes of the placeholder",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/audit": {
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Check if collection is ready for deploying, minting or re-syncing\r\nReturns a list of invalid fields and tokens that must be addressed",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuditResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/availability": {
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Returns a list of tokens available for specified collection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailabilityResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/files/{index}": {
      "post": {
        "tags": [
          "Collection"
        ],
        "summary": "Upload a file for all the tokens in collection.\r\nUploading for the same index will replace the existing file.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file",
                  "fileType"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "fileType": {
                    "$ref": "#/components/schemas/FileType"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "fileType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/attributes/generate": {
      "patch": {
        "tags": [
          "Collection"
        ],
        "summary": "Generate attributes for given collection from provided trait options randomly",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GenerateAttribute"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GenerateAttribute"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GenerateAttribute"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GenerateAttribute"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringListListPagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListListPagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringListListPagedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/updatablefields": {
      "get": {
        "tags": [
          "Collection"
        ],
        "summary": "Get the collection updatable fields based on contract and current state",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/deploy": {
      "get": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Get deployment status",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Deploy the collection contract and it's dependencies.\r\nThis endpoint needs updating once contract is finalized.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/mint": {
      "get": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Get minting status",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Start minting tokens of the collection, Will also update already minted tokens.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/resync": {
      "get": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Get resync status",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Start updating the minted tokens. Will not mint new tokens.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/issue/{issuanceId}": {
      "get": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Get issue status for a collection for a given requestId.\r\nRequestId is returned when you request an issue.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issuanceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssueStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/issue": {
      "post": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Verify that issue request is valid and start a issuance process.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssueRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssueRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IssueStatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueStatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssueStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/pause": {
      "post": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Pause claims for a collection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/unpause": {
      "post": {
        "tags": [
          "Collection Actions"
        ],
        "summary": "Unpause claims for a collection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/metadata/export": {
      "get": {
        "tags": [
          "Collection Export Import"
        ],
        "summary": "Download token metadata for specified collection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/collection/{guid}/metadata/import": {
      "post": {
        "tags": [
          "Collection Export Import"
        ],
        "summary": "Upload token metadata for specified collection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "zipFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "zipFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/collection/{guid}/importcsv": {
      "post": {
        "tags": [
          "Collection Export Import"
        ],
        "summary": "Import multiple tokens from csv",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "csvFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "csvFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/collection/{guid}/tokens/import": {
      "get": {
        "tags": [
          "Collection Export Import"
        ],
        "summary": "Get status of a import session with files uploaded and their hash etc",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Collection Export Import"
        ],
        "summary": "Upload files for a specified collection",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileState"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileState"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileState"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collection Export Import"
        ],
        "summary": "Commit changes based on uploaded files",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Collection Export Import"
        ],
        "summary": "Discard any previously started (but not committed) bulk upload session.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkUploadResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/info": {
      "get": {
        "tags": [
          "Collection Info"
        ],
        "operationId": "GetCollectionInfo",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collection Info"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionInfoRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionInfoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionInfoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionInfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/bundle": {
      "post": {
        "tags": [
          "Collection Info"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionBundleRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionBundleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionBundleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Collection Info"
        ],
        "operationId": "GetCollectionBundle",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionBundleResponse"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/info/images/logo": {
      "post": {
        "tags": [
          "Collection Info"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "logo": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{guid}/info/images/banner": {
      "post": {
        "tags": [
          "Collection Info"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "banner": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "banner": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{collectionGuid}/phases": {
      "post": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Create Phase for a collection",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PhaseRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhaseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Get a list of all collection phases",
        "operationId": "GetCollectionPhases",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tokenGuid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhaseResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhaseResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhaseResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{collectionGuid}/phases/{phaseGuid}": {
      "get": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Get a phase of Collection by phase Id",
        "operationId": "GetCollectionPhaseById",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Update a collection phase by Id",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PhaseRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhaseRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PhaseRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PhaseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Delete a phase by Id",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/collection/{collectionGuid}/phases/{phaseGuid}/proof/{address}": {
      "get": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Get a merkle proofs of phase for whitelisted address",
        "operationId": "GetMerkleProofsOfAddress",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MerkleProofResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerkleProofResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerkleProofResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{collectionGuid}/phases/{phaseGuid}/whitelist": {
      "get": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Get a collection whitelist by collection and Phase ID",
        "operationId": "GetPhaseWhitelist",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Post a collection whitelist by collection and Phase ID - JSON body",
        "operationId": "PostPhaseWhitelistJson",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Delete a Whitelist by Id",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OkResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Collection/Token Phases"
        ],
        "summary": "Append new addresses to a Whitelist by phase Id",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      }
    },
    "/collection/{collectionGuid}/phases/{phaseGuid}/whitelist/csv": {
      "post": {
        "tags": [
          "Collection/Token Phases"
        ],
        "operationId": "PostPhaseWhitelistCSV",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WhitelistResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/contract": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get a list of contracts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponsePagedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponsePagedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponsePagedResult"
                }
              }
            }
          }
        }
      }
    },
    "/contract/{contractAddress}/proofs": {
      "get": {
        "tags": [
          "Contract"
        ],
        "summary": "Get a contract's proof by address",
        "operationId": "GetMerkleProofsFromContract",
        "parameters": [
          {
            "name": "contractAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WalletAddress",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ChainName",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Chain"
            }
          },
          {
            "name": "TokenId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MerkleProofResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerkleProofResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerkleProofResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/funding/reservoir": {
      "get": {
        "tags": [
          "Funding"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/funding/clients": {
      "get": {
        "tags": [
          "Funding"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/lock": {
      "post": {
        "tags": [
          "Lock"
        ],
        "summary": "Lock a token in specified collection if the lock request is successful",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LockRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LockRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LockRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token locked for either Fiat or Crypto transaction",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LockResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/lock/{guid}": {
      "get": {
        "tags": [
          "Lock"
        ],
        "summary": "Check the transfer/lock status",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status of token transfer/lock",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "delete": {
        "tags": [
          "Lock"
        ],
        "summary": "Unlock the specified locked token\r\nAlso cancel the 0x order if the payment type was crypto",
        "description": "Doesn't delete the lock in database!",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order cancelled",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      },
      "patch": {
        "tags": [
          "Lock"
        ],
        "summary": "Extend the expiry time for a specified lock",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExtendRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendResponse"
                }
              }
            }
          }
        }
      }
    },
    "/lock/{guid}/transfer": {
      "post": {
        "tags": [
          "Lock"
        ],
        "summary": "Execute a transfer for Fiat payment type. Throws bad request error if payment type is crypto.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token transfer initiated",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/lock/distribute": {
      "post": {
        "tags": [
          "Lock"
        ],
        "summary": "Lock a token in specified collection if the lock request is successful then transfer it.",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DistributeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token locked and Transferred",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "Ping"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/pingdispose": {
      "get": {
        "tags": [
          "PingDispose"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/pingnodb": {
      "get": {
        "tags": [
          "PingNoDb"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/sentry/exception": {
      "get": {
        "tags": [
          "Sentry"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/sentry/log": {
      "get": {
        "tags": [
          "Sentry"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Create a new token",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/token/batch": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Create multiple tokens",
        "operationId": "BatchTokens",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateTokenRequest"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateTokenRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateTokenRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateTokenRequest"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/token/{guid}": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Get a token by Id",
        "operationId": "GetTokenById",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Token"
        ],
        "summary": "Update a token by Id",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/token/{collectionGuid}/{tokenId}": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Get a token by on chain token Id",
        "operationId": "GetTokenByExternalId",
        "parameters": [
          {
            "name": "collectionGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/token/{tokenGuid}/phases/{phaseGuid}": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Get a phase of Token by phase Id",
        "operationId": "GetTokenPhaseById",
        "parameters": [
          {
            "name": "tokenGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "phaseGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/token/{tokenGuid}/phases": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Get a list of all token phases",
        "operationId": "GetTokenPhases",
        "parameters": [
          {
            "name": "tokenGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhaseResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhaseResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhaseResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          }
        }
      }
    },
    "/token/{guid}/attributes": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Get the token attributes",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenAttributeResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenAttributeResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenAttributeResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Update the token attributes, it will replace all existing attributes",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Token"
        ],
        "summary": "Append token attributes, overwrite attributes with same `trait_type`",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TokenAttributeRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/token/{guid}/attributes/{traitType}": {
      "delete": {
        "tags": [
          "Token"
        ],
        "summary": "Delete an attribute by `trait_type`",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "traitType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/token/{guid}/files": {
      "get": {
        "tags": [
          "Token"
        ],
        "summary": "Get a list of files for this token",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/token/{guid}/files/{index}": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Upload a file for the token, where id is tokenId and index starts from 0. Uploading for the same index will replace the existing file.",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file",
                  "fileType"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "fileType": {
                    "$ref": "#/components/schemas/FileType"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                },
                "fileType": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Token"
        ],
        "summary": "Put a customer resource url as a file to a token by its index",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PutFileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutFileRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutFileRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutFileRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Token"
        ],
        "summary": "Delete a file from the token by it's index",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/utility/files": {
      "post": {
        "tags": [
          "Utility"
        ],
        "operationId": "PostUtilityFiles",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuditResponse": {
        "type": "object",
        "properties": {
          "collectionId": {
            "type": "integer",
            "format": "int32"
          },
          "collectionAudit": {
            "$ref": "#/components/schemas/CollectionAudit"
          }
        },
        "additionalProperties": false
      },
      "AuditType": {
        "enum": [
          "PreDeployAudit",
          "PreMintingAudit",
          "PreResyncAudit"
        ],
        "type": "string"
      },
      "AuthRequest": {
        "required": [
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Username for autentication",
            "example": "john.doe"
          },
          "password": {
            "type": "string",
            "example": "pa$$w0rd"
          }
        },
        "additionalProperties": false
      },
      "AvailabilityResponse": {
        "required": [
          "count",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the collection"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BadRequestResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BulkUploadResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "media": {
            "$ref": "#/components/schemas/Progress"
          },
          "token": {
            "$ref": "#/components/schemas/Progress"
          },
          "uploads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileStateResponse"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/SessionState"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkUploadState": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "media": {
            "$ref": "#/components/schemas/Progress"
          },
          "token": {
            "$ref": "#/components/schemas/Progress"
          },
          "uploads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileState"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/SessionState"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Chain": {
        "enum": [
          "Ethereum",
          "Ropsten",
          "Rinkeby",
          "Goerli",
          "Polygon",
          "Mumbai",
          "PalmTestnet",
          "Palm"
        ],
        "type": "string"
      },
      "ClientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "nullable": true
          },
          "walletAddress": {
            "type": "string",
            "nullable": true
          },
          "primarySaleFee": {
            "type": "number",
            "format": "double"
          },
          "permissions": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          }
        },
        "additionalProperties": false
      },
      "CollectionAudit": {
        "type": "object",
        "properties": {
          "ready": {
            "type": "boolean"
          },
          "auditType": {
            "$ref": "#/components/schemas/AuditType"
          },
          "collection": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenAudit"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CollectionBundleRequest": {
        "type": "object",
        "properties": {
          "collectionInfo": {
            "$ref": "#/components/schemas/CollectionInfoRequest"
          },
          "creatorToolsFields": {
            "$ref": "#/components/schemas/CreatorToolsFieldsRequest"
          }
        },
        "additionalProperties": false
      },
      "CollectionBundleResponse": {
        "type": "object",
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/CollectionResponse"
          },
          "collectionInfo": {
            "$ref": "#/components/schemas/CollectionInfoResponse"
          },
          "creatorToolsFields": {
            "$ref": "#/components/schemas/CreatorToolsFieldsResponse"
          }
        },
        "additionalProperties": false
      },
      "CollectionInfoCategories": {
        "enum": [
          "Music",
          "Gaming",
          "Metaverse",
          "PFP",
          "Art",
          "GenerativeArt",
          "Photography",
          "AccessPass",
          "Utility",
          "Collectible",
          "Video"
        ],
        "type": "string"
      },
      "CollectionInfoRequest": {
        "type": "object",
        "properties": {
          "collectionDescription": {
            "type": "string",
            "nullable": true
          },
          "externalLink": {
            "type": "string",
            "nullable": true
          },
          "collectionCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionInfoCategories"
            },
            "nullable": true
          },
          "creatorsInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatorInfo"
            },
            "nullable": true
          },
          "explicitContent": {
            "type": "boolean"
          },
          "alternativeText": {
            "type": "string",
            "nullable": true
          },
          "twitter": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "discord": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "instagram": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "telegram": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "collectionLogo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CollectionInfoResponse": {
        "type": "object",
        "properties": {
          "collectionDescription": {
            "type": "string",
            "nullable": true
          },
          "externalLink": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "collectionCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionInfoCategories"
            },
            "nullable": true
          },
          "creatorsInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreatorInfo"
            },
            "nullable": true
          },
          "alternativeText": {
            "type": "string",
            "nullable": true
          },
          "explicitContent": {
            "type": "boolean"
          },
          "twitter": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "discord": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "instagram": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "linkedIn": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "telegram": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "banner": {
            "type": "string",
            "nullable": true
          },
          "collectionLogo": {
            "type": "string",
            "nullable": true
          },
          "syncStatus": {
            "$ref": "#/components/schemas/SyncStatus"
          }
        },
        "additionalProperties": false
      },
      "CollectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "baseUri": {
            "type": "string",
            "nullable": true
          },
          "chain": {
            "$ref": "#/components/schemas/Chain"
          },
          "maxTokens": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractName": {
            "type": "string",
            "nullable": true
          },
          "contractVersion": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "visibility": {
            "$ref": "#/components/schemas/CollectionVisibility"
          },
          "fileSource": {
            "$ref": "#/components/schemas/FileSource"
          },
          "defaultLockTime": {
            "type": "integer",
            "format": "int32"
          },
          "royaltyPercentage": {
            "type": "number",
            "format": "double"
          },
          "saleRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            },
            "nullable": true
          },
          "saleRecipientAddress": {
            "type": "string",
            "nullable": true
          },
          "royaltyRecipients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recipient"
            },
            "nullable": true
          },
          "royaltyRecipientAddress": {
            "type": "string",
            "nullable": true
          },
          "mintingWalletAddress": {
            "type": "string",
            "nullable": true
          },
          "limitMaxClaim": {
            "type": "boolean"
          },
          "maxClaimPerWallet": {
            "type": "integer",
            "format": "int32"
          },
          "clientWallet": {
            "type": "string",
            "nullable": true
          },
          "enableTerms": {
            "type": "boolean"
          },
          "userTerms": {
            "$ref": "#/components/schemas/UserTermsResponse"
          },
          "hasPlaceholder": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CollectionResponsePagedResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionResponse"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "maxPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CollectionVisibility": {
        "enum": [
          "PreReveal",
          "Revealed"
        ],
        "type": "string"
      },
      "ContractResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "fungibility": {
            "$ref": "#/components/schemas/Fungibility"
          },
          "chains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chain"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContractResponsePagedResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContractResponse"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "maxPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateClientRequest": {
        "required": [
          "name",
          "password",
          "permissions",
          "primarySaleFee"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 4,
            "type": "string",
            "example": "john.doe"
          },
          "password": {
            "minLength": 6,
            "type": "string",
            "example": "pa$$w0rd"
          },
          "contact": {
            "type": "string",
            "nullable": true,
            "example": "john.doe@example.com"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "primarySaleFee": {
            "type": "number",
            "description": "The percentage that Monax will take from Primary Sales",
            "format": "double",
            "example": 2.5
          },
          "permissions": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Permissions to give to client. Don't need to set if false, add only permissions set to true",
            "example": {
              "DeployCollectionsOnMainnets": true,
              "ProvideMainnetFunds": true
            }
          }
        },
        "additionalProperties": false
      },
      "CreateCollectionRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "chain": {
            "$ref": "#/components/schemas/Chain"
          },
          "maxTokens": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractName": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "$ref": "#/components/schemas/CollectionVisibility"
          },
          "fileSource": {
            "$ref": "#/components/schemas/FileSource"
          },
          "defaultLockTime": {
            "type": "integer",
            "description": "",
            "format": "int32",
            "example": 3600
          },
          "royaltyPercentage": {
            "type": "number",
            "format": "double"
          },
          "mintingWalletAddress": {
            "type": "string",
            "nullable": true
          },
          "limitMaxClaim": {
            "type": "boolean"
          },
          "maxClaimPerWallet": {
            "type": "integer",
            "format": "int32"
          },
          "clientWallet": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTokenRequest": {
        "required": [
          "collectionGuid",
          "name"
        ],
        "type": "object",
        "properties": {
          "collectionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalUrl": {
            "type": "string",
            "nullable": true
          },
          "maxSupply": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfFiles": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreatorInfo": {
        "type": "object",
        "properties": {
          "creator_name": {
            "type": "string",
            "nullable": true
          },
          "creator_email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorToolsFieldsRequest": {
        "required": [
          "fixedCap",
          "freeMint",
          "mintCollectionPage",
          "phases",
          "termsOfService"
        ],
        "type": "object",
        "properties": {
          "fixedCap": {
            "type": "boolean"
          },
          "phases": {
            "type": "boolean"
          },
          "freeMint": {
            "type": "boolean"
          },
          "termsOfService": {
            "type": "boolean"
          },
          "mintCollectionPage": {
            "type": "boolean"
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isTestnet": {
            "type": "boolean"
          },
          "nftMediaType": {
            "$ref": "#/components/schemas/NftMediaType"
          },
          "hasPreviewImage": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatorToolsFieldsResponse": {
        "type": "object",
        "properties": {
          "fixedCap": {
            "type": "boolean"
          },
          "phases": {
            "type": "boolean"
          },
          "freeMint": {
            "type": "boolean"
          },
          "termsOfService": {
            "type": "boolean"
          },
          "mintCollectionPage": {
            "type": "boolean"
          },
          "phaseNumber": {
            "type": "integer",
            "format": "int32"
          },
          "isTestnet": {
            "type": "boolean"
          },
          "nftMediaType": {
            "$ref": "#/components/schemas/NftMediaType"
          },
          "hasPreviewImage": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Currency": {
        "enum": [
          "WETH",
          "DAI",
          "USDC",
          "NATIVE_COIN"
        ],
        "type": "string"
      },
      "DistributeRequest": {
        "required": [
          "collectionGuid",
          "toAddress"
        ],
        "type": "object",
        "properties": {
          "collectionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "toAddress": {
            "type": "string"
          },
          "signedTerms": {
            "type": "string",
            "description": "If PaymentType is Fiat, SignedTerms is required\r\nSignature is added to the deployed contract",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EvmTransaction": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "nullable": true
          },
          "params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionParam"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExtendRequest": {
        "type": "object",
        "properties": {
          "expiry": {
            "type": "number",
            "description": "Extend time in seconds",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ExtendResponse": {
        "required": [
          "expiresAt"
        ],
        "type": "object",
        "properties": {
          "expiresAt": {
            "type": "string",
            "description": "Unix timestamp identifying when the lock expiers",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FileProcessingStatus": {
        "enum": [
          "Pending",
          "Processing",
          "Processed",
          "Error"
        ],
        "type": "string"
      },
      "FileResponse": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "web2Url": {
            "type": "string",
            "nullable": true
          },
          "ipfsUrl": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/FileStatus"
          },
          "fileType": {
            "$ref": "#/components/schemas/FileType"
          }
        },
        "additionalProperties": false
      },
      "FileSource": {
        "enum": [
          "Ipfs",
          "Web2"
        ],
        "type": "string"
      },
      "FileState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "bulkUploadStateId": {
            "type": "integer",
            "format": "int32"
          },
          "bulkUploadState": {
            "$ref": "#/components/schemas/BulkUploadState"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/FileProcessingStatus"
          },
          "hash": {
            "type": "string",
            "nullable": true
          },
          "fileType": {
            "$ref": "#/components/schemas/ImportFileType"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileStateResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/FileProcessingStatus"
          },
          "hash": {
            "type": "string",
            "nullable": true
          },
          "fileType": {
            "$ref": "#/components/schemas/ImportFileType"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileStatus": {
        "enum": [
          "Local",
          "Uploading",
          "Uploaded",
          "ClientProvided"
        ],
        "type": "string"
      },
      "FileType": {
        "enum": [
          "Image",
          "Media",
          "Other"
        ],
        "type": "string"
      },
      "Fungibility": {
        "enum": [
          "NonFungible",
          "SemiFungible"
        ],
        "type": "string"
      },
      "GenerateAttribute": {
        "required": [
          "traitOptions",
          "traitType"
        ],
        "type": "object",
        "properties": {
          "traitType": {
            "type": "string"
          },
          "addOnlyToTokensWith": {
            "$ref": "#/components/schemas/TokenAttributeCondition"
          },
          "traitOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenAttributeOption"
            }
          }
        },
        "additionalProperties": false
      },
      "IContractResolver": {
        "type": "object",
        "additionalProperties": false
      },
      "ImportFileType": {
        "enum": [
          "Tokens",
          "Media",
          "Metadata",
          "Invalid"
        ],
        "type": "string"
      },
      "IssuanceStatus": {
        "enum": [
          "Pending",
          "Issuing",
          "IssuingError",
          "Issued"
        ],
        "type": "string"
      },
      "IssueRequest": {
        "required": [
          "to"
        ],
        "type": "object",
        "properties": {
          "to": {
            "type": "string",
            "description": "Who the token shall be issued to?"
          },
          "tokenId": {
            "type": "integer",
            "description": "Token Id to issue, only valid in the context of a semi-fungible token like (ERC1155).\r\nFor a non-fungible token (ERC721) validation will fail with bad request.",
            "format": "int32",
            "nullable": true
          },
          "tokenData": {
            "$ref": "#/components/schemas/TokenAttributeRequestPutFileRequestTokenData"
          }
        },
        "additionalProperties": false
      },
      "IssueStatusResponse": {
        "type": "object",
        "properties": {
          "collectionId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/IssuanceStatus"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "issuanceId": {
            "type": "integer",
            "description": "Issue Issuance Id to be used to enquire the status of the issue",
            "format": "int32"
          },
          "tokenId": {
            "type": "integer",
            "description": "After token is issued, TokenId will be assigned",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LockRequest": {
        "required": [
          "collectionGuid",
          "toAddress"
        ],
        "type": "object",
        "properties": {
          "collectionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "toAddress": {
            "type": "string"
          },
          "paymentType": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "signedTerms": {
            "type": "string",
            "description": "If PaymentType is Fiat, SignedTerms is required\r\nSignature is added to the deployed contract",
            "nullable": true
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "expiry": {
            "type": "number",
            "description": "In seconds",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "LockResponse": {
        "required": [
          "approvalData",
          "expiresAt",
          "lockId",
          "orderData"
        ],
        "type": "object",
        "properties": {
          "lockId": {
            "type": "integer",
            "description": "Unique Id for a lock",
            "format": "int32"
          },
          "acceptTermsData": {
            "$ref": "#/components/schemas/EvmTransaction"
          },
          "approvalData": {
            "$ref": "#/components/schemas/EvmTransaction"
          },
          "orderData": {
            "$ref": "#/components/schemas/EvmTransaction"
          },
          "expiresAt": {
            "type": "string",
            "description": "Unix timestamp identifying when the lock expires",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MerkleProofResponse": {
        "type": "object",
        "properties": {
          "proofs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Merkle nodes of Whitelist merkle tree\r\nordered from whitelisted address up to the root",
            "nullable": true
          },
          "proofMaxQuantityPerTransaction": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MintAnalyticsResponse": {
        "type": "object",
        "properties": {
          "phaseTally": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "priceTally": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "freeMints": {
            "type": "integer",
            "format": "int32"
          },
          "paidMints": {
            "type": "integer",
            "format": "int32"
          },
          "totalMints": {
            "type": "integer",
            "format": "int32"
          },
          "totalProceeds": {
            "type": "string",
            "nullable": true
          },
          "royaltyFee": {
            "type": "number",
            "format": "float"
          },
          "maxAvailableTokens": {
            "type": "integer",
            "format": "int32"
          },
          "contractAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "type": "string",
            "nullable": true
          },
          "chainName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NftMediaType": {
        "enum": [
          "Image",
          "Video",
          "Audio",
          "Documents",
          "Other"
        ],
        "type": "string"
      },
      "NotFoundResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OkResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OperationType": {
        "enum": [
          "Add",
          "Remove",
          "Replace",
          "Move",
          "Copy",
          "Test",
          "Invalid"
        ],
        "type": "string"
      },
      "OrderStatus": {
        "enum": [
          "Pending",
          "Failed",
          "Cancelled",
          "Expired",
          "Completed"
        ],
        "type": "string"
      },
      "PaymentType": {
        "enum": [
          "Crypto",
          "Fiat"
        ],
        "type": "string"
      },
      "PhaseRequest": {
        "required": [
          "currency",
          "pricePerToken",
          "startTimestamp",
          "waitTimeInSecondsBetweenClaims"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "headerText": {
            "type": "string",
            "nullable": true
          },
          "bannerButtonText": {
            "type": "string",
            "nullable": true
          },
          "tokenGuid": {
            "type": "string",
            "description": "TokenId shall be null if you are setting a collecting wide phase",
            "format": "uuid",
            "default": null,
            "nullable": true
          },
          "startTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "maxClaimableSupply": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantityLimitPerTransaction": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitTimeInSecondsBetweenClaims": {
            "type": "integer",
            "format": "int32"
          },
          "pricePerToken": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "additionalProperties": false
      },
      "PhaseResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "collectionGuid": {
            "type": "string",
            "format": "uuid"
          },
          "tokenGuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "headerText": {
            "type": "string",
            "nullable": true
          },
          "bannerButtonText": {
            "type": "string",
            "nullable": true
          },
          "startTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "maxClaimableSupply": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplyClaimed": {
            "type": "integer",
            "format": "int32"
          },
          "quantityLimitPerTransaction": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "waitTimeInSecondsBetweenClaims": {
            "type": "integer",
            "format": "int32"
          },
          "merkleRoot": {
            "type": "string",
            "nullable": true
          },
          "pricePerToken": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "syncStatus": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "hasWhitelist": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PlaceholderRequest": {
        "required": [
          "name",
          "numberOfFiles"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalUrl": {
            "type": "string",
            "nullable": true
          },
          "numberOfFiles": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PlaceholderResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "numberOfFiles": {
            "type": "integer",
            "format": "int32"
          },
          "externalUrl": {
            "type": "string",
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileResponse"
            },
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenAttributeResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Price": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Progress": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "done": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PutFileRequest": {
        "required": [
          "contentType",
          "extension",
          "fileType",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "fileType": {
            "$ref": "#/components/schemas/FileType"
          }
        },
        "additionalProperties": false
      },
      "QueueStatus": {
        "enum": [
          "Unknown",
          "InQueue",
          "Processing",
          "Completed",
          "Error"
        ],
        "type": "string"
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "share": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Role": {
        "enum": [
          "Client",
          "Admin"
        ],
        "type": "string"
      },
      "SessionState": {
        "enum": [
          "NewSession",
          "Uploading",
          "InQueue",
          "Processing",
          "Error",
          "Completed"
        ],
        "type": "string"
      },
      "SignatureResult": {
        "type": "object",
        "properties": {
          "signed": {
            "type": "boolean"
          },
          "termsActivated": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "State": {
        "enum": [
          "Pending",
          "Deploying",
          "DeploymentError",
          "Deployed"
        ],
        "type": "string"
      },
      "StatusResponse": {
        "required": [
          "lockId",
          "status",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "lockId": {
            "type": "integer",
            "description": "Unique Id for a lock",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "description": "Timestamp for last status change",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "StringListListPagedResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "maxPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SyncStatus": {
        "enum": [
          "Dirty",
          "Clean"
        ],
        "type": "string"
      },
      "TaskStatusResponse": {
        "type": "object",
        "properties": {
          "collectionId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/QueueStatus"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenAttributeCondition": {
        "type": "object",
        "properties": {
          "trait_type": {
            "type": "string",
            "nullable": true
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenAttributeOption": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TokenAttributeRequest": {
        "required": [
          "trait_type",
          "traitObject"
        ],
        "type": "object",
        "properties": {
          "trait_type": {
            "type": "string",
            "description": "Trait (name of attribute)"
          },
          "traitObject": {
            "type": "object",
            "additionalProperties": { },
            "description": "Value of the trait and it's type",
            "example": {
              "value": "Hello World || 42 || true",
              "display_type": "string || number || boolean"
            }
          }
        },
        "additionalProperties": false
      },
      "TokenAttributeRequestPutFileRequestTokenData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalUrl": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenAttributeRequest"
            },
            "nullable": true
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PutFileRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenAttributeResponse": {
        "required": [
          "trait_type",
          "traitObject"
        ],
        "type": "object",
        "properties": {
          "trait_type": {
            "type": "string",
            "description": "Type of the trait"
          },
          "traitObject": {
            "type": "object",
            "additionalProperties": { },
            "description": "Value of the trait",
            "example": {
              "value": "string | number | boolean",
              "display_type": "string | number | boolean"
            }
          }
        },
        "additionalProperties": false
      },
      "TokenAudit": {
        "type": "object",
        "properties": {
          "tokenId": {
            "type": "integer",
            "format": "int32"
          },
          "invalidFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "tokenId": {
            "type": "integer",
            "description": "On chain Id for this token",
            "format": "int32"
          },
          "collectionId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalUrl": {
            "type": "string",
            "nullable": true
          },
          "numberOfFiles": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/TokenStatus"
          },
          "syncStatus": {
            "$ref": "#/components/schemas/SyncStatus"
          },
          "maxSupply": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TokenResponsePagedResult": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenResponse"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "maxPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TokenStatus": {
        "enum": [
          "Draft",
          "Minting",
          "MintingError",
          "Minted",
          "Locked",
          "Transferred"
        ],
        "type": "string"
      },
      "TransactionParam": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "nullable": true
          },
          "to": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "chainId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnauthorizedResult": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdatableCollectionFields": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "maxTokens": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "contractName": {
            "type": "string",
            "nullable": true
          },
          "visibility": {
            "$ref": "#/components/schemas/CollectionVisibility"
          },
          "fileSource": {
            "$ref": "#/components/schemas/FileSource"
          },
          "defaultLockTime": {
            "type": "integer",
            "format": "int32"
          },
          "chain": {
            "type": "string",
            "nullable": true
          },
          "royaltyPercentage": {
            "type": "number",
            "format": "double"
          },
          "mintingWalletAddress": {
            "type": "string",
            "nullable": true
          },
          "limitMaxClaim": {
            "type": "boolean"
          },
          "maxClaimPerWallet": {
            "type": "integer",
            "format": "int32"
          },
          "clientWallet": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatableCollectionFieldsJsonPatchDocument": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatableCollectionFieldsOperation"
            },
            "nullable": true
          },
          "contractResolver": {
            "$ref": "#/components/schemas/IContractResolver"
          }
        },
        "additionalProperties": false
      },
      "UpdatableCollectionFieldsOperation": {
        "type": "object",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/OperationType"
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "op": {
            "type": "string",
            "nullable": true
          },
          "from": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateClientRequest": {
        "required": [
          "permissions",
          "primarySaleFee"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "example": "john.doe"
          },
          "password": {
            "type": "string",
            "nullable": true,
            "example": "pa$$w0rd"
          },
          "contact": {
            "type": "string",
            "nullable": true,
            "example": "john.doe@example.com"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "primarySaleFee": {
            "type": "number",
            "description": "The percentage that Monax will take from Primary Sales",
            "format": "double",
            "example": 2.5
          },
          "permissions": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "description": "Permissions to give to client. Don't need to set if false, add only permissions set to true",
            "example": {
              "DeployCollectionsOnMainnets": true,
              "ProvideMainnetFunds": true
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateTokenRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "externalUrl": {
            "type": "string",
            "nullable": true
          },
          "maxSupply": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfFiles": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserTermsResponse": {
        "type": "object",
        "properties": {
          "web2Url": {
            "type": "string",
            "nullable": true
          },
          "ipfsUrl": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WhitelistResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "addresses": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please insert JWT. Example: \"Bearer xxxxxxxxxxxxxxxx\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}