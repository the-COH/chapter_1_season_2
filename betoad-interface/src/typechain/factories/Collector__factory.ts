/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Collector, CollectorInterface } from "../Collector";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_beto",
        type: "address",
      },
      {
        internalType: "address",
        name: "_note",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "addAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "addHarvestContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allAssetInfos",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct ICollector.AssetInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allAssetProfits",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "profit",
            type: "uint256",
          },
        ],
        internalType: "struct ICollector.ProfitResponse[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct ICollector.BalanceResponse[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "asset",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profit",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beto",
    outputs: [
      {
        internalType: "contract ERC20Mint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnOrDistribute",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buybackBeto",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buybackType",
    outputs: [
      {
        internalType: "enum Collector.BuybackType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chip",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "collect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributor",
    outputs: [
      {
        internalType: "contract IDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "harvestContracts",
    outputs: [
      {
        internalType: "contract ICollectable",
        name: "collectable",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "note",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "removeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "contractId",
        type: "uint256",
      },
    ],
    name: "removeHarvestContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract BaseV1Router01",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beto",
        type: "address",
      },
    ],
    name: "setBeto",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Collector.BuybackType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "setBuybackType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_distributor",
        type: "address",
      },
    ],
    name: "setDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapAllForNote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "swapForNote",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurnAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBuybackAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapV3Factory",
    outputs: [
      {
        internalType: "contract IUniswapV3Factory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d4438038062001d448339810160408190526200003491620000ef565b6200003f3362000082565b600180546001600160a01b039485166001600160a01b0319918216179091556002805493851693821693909317909255600a805491909316911617905562000139565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000ea57600080fd5b919050565b6000806000606084860312156200010557600080fd5b6200011084620000d2565b92506200012060208501620000d2565b91506200013060408501620000d2565b90509250925092565b611bfb80620001496000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637547566f1161010f578063c31c9c07116100a2578063ee8c9c0211610071578063ee8c9c0214610451578063f2fde38b14610464578063f869fab914610477578063f887ea401461048a57600080fd5b8063c31c9c07146103e4578063cb55fe6b146103f7578063cf35bdd014610429578063e89d0e731461043c57600080fd5b80639c4667a2116100de5780639c4667a21461035c578063b467f128146103ab578063b61500e4146103be578063bfe10928146103d157600080fd5b80637547566f1461031c57806375619ab51461032f5780638da5cb5b14610342578063924c52081461035357600080fd5b80634a5e42b1116101875780636b8357ac116101565780636b8357ac146102d95780636d1fb363146102ec5780636f7d6efc14610301578063715018a61461031457600080fd5b80634a5e42b114610295578063555b6162146102a85780635a77e12a146102bd5780635b549182146102c657600080fd5b80632f5c69ed116101c35780632f5c69ed146102565780633314f9e11461026b5780634641257d146102855780634776b2651461028d57600080fd5b806310b8c49d146101f557806317a3db611461021057806326d111f514610218578063298410e514610243575b600080fd5b6101fd61049d565b6040519081526020015b60405180910390f35b6101fd6104fd565b60025461022b906001600160a01b031681565b6040516001600160a01b039091168152602001610207565b6101fd610251366004611841565b610762565b610269610264366004611841565b61088f565b005b600d546102789060ff1681565b6040516102079190611879565b6102696108b9565b6101fd610996565b6102696102a3366004611841565b610ba8565b6102b0610c95565b60405161020791906118a1565b6101fd600c5481565b60085461022b906001600160a01b031681565b6102696102e7366004611901565b610eb1565b6102f4610fdb565b604051610207919061192b565b61026961030f366004611979565b6110fe565b61026961115e565b6101fd61032a366004611841565b611172565b61026961033d366004611841565b611220565b6000546001600160a01b031661022b565b6101fd600b5481565b61038e61036a366004611841565b60056020526000908152604090208054600182015460029092015490919060ff1683565b604080519384526020840192909252151590820152606001610207565b6101fd6103b9366004611841565b61124a565b60035461022b906001600160a01b031681565b60075461022b906001600160a01b031681565b60095461022b906001600160a01b031681565b61040a610405366004611979565b611533565b604080516001600160a01b039093168352901515602083015201610207565b61022b610437366004611979565b611568565b610444611592565b6040516102079190611992565b61026961045f3660046119e5565b6116c5565b610269610472366004611841565b6116f3565b60015461022b906001600160a01b031681565b600a5461022b906001600160a01b031681565b6000805b6004548110156104f9576104db600482815481106104c1576104c1611a06565b6000918252602090912001546001600160a01b031661124a565b6104e59083611a32565b9150806104f181611a4a565b9150506104a1565b5090565b600080600d5460ff16600181111561051757610517611863565b141561057c576000546001600160a01b0316331461057c5760405162461bcd60e51b815260206004820152600260248201527f554100000000000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190611a65565b905080156104f957600254600a5460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015610646573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066a9190611a7e565b50600a546002546001546040516313dcfc5960e01b8152600481018590526000602482018190526001600160a01b0393841660448301529183166064820152608481018290523060a48201524260c4820152909291909116906313dcfc599060e4016000604051808303816000875af11580156106eb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107139190810190611ab6565b90508060008151811061072857610728611a06565b6020026020010151600b5461073d9190611a32565b600b558051819060009061075357610753611a06565b60200260200101519250505090565b600061076c611780565b6001600160a01b03821660009081526005602052604090206002015460ff16156107d85760405162461bcd60e51b815260206004820152600260248201527f41450000000000000000000000000000000000000000000000000000000000006044820152606401610573565b600480546001808201835560008390527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90910180546001600160a01b0319166001600160a01b03861617905590546108319190611b74565b604080516060810182528281526000602080830182815260018486018181526001600160a01b039990991684526005909252939091209151825591519181019190915592516002909301805460ff1916931515939093179092555090565b610897611780565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60005b60065481101561099357600681815481106108d9576108d9611a06565b600091825260209091200154600160a01b900460ff1615610981576006818154811061090757610907611a06565b6000918252602082200154604080517fe522538100000000000000000000000000000000000000000000000000000000815290516001600160a01b039092169263e52253819260048084019382900301818387803b15801561096857600080fd5b505af115801561097c573d6000803e3d6000fd5b505050505b8061098b81611a4a565b9150506108bc565b50565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190611a65565b90506103e8600760009054906101000a90046001600160a01b03166001600160a01b031663a32bf5976040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7f9190611a65565b1015610b165780600c6000828254610a979190611a32565b90915550506001546040517f42966c68000000000000000000000000000000000000000000000000000000008152600481018390526001600160a01b03909116906342966c6890602401600060405180830381600087803b158015610afb57600080fd5b505af1158015610b0f573d6000803e3d6000fd5b5050505090565b6001546007546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303816000875af1158015610b84573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f99190611a7e565b610bb0611780565b6001600160a01b0381166000908152600560205260409020600201805460ff1916905560048054610be390600190611b74565b81548110610bf357610bf3611a06565b60009182526020808320909101546001600160a01b0384811684526005909252604090922054600480549290931692918110610c3157610c31611a06565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506004805480610c7057610c70611b8b565b600082815260209020810160001990810180546001600160a01b031916905501905550565b600454606090600090610ca9906001611a32565b67ffffffffffffffff811115610cc157610cc1611aa0565b604051908082528060200260200182016040528015610d0657816020015b6040805180820190915260008082526020820152815260200190600190039081610cdf5790505b50905060005b600454811015610e0d57604051806040016040528060048381548110610d3457610d34611a06565b600091825260209182902001546001600160a01b0316825260048054929091019184908110610d6557610d65611a06565b6000918252602090912001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610db6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda9190611a65565b815250828281518110610def57610def611a06565b60200260200101819052508080610e0590611a4a565b915050610d0c565b506040805180820182526002546001600160a01b031680825291516370a0823160e01b8152306004820152909160208301916370a0823190602401602060405180830381865afa158015610e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e899190611a65565b905260045482518391908110610ea157610ea1611a06565b6020908102919091010152919050565b6001600160a01b0382166000908152600560205260409020600281015460ff16610f1d5760405162461bcd60e51b815260206004820152600260248201527f4e410000000000000000000000000000000000000000000000000000000000006044820152606401610573565b6001600160a01b0383166323b872dd336040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152306024820152604481018590526064016020604051808303816000875af1158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbc9190611a7e565b5081816001016000828254610fd19190611a32565b9091555050505050565b60045460609060009067ffffffffffffffff811115610ffc57610ffc611aa0565b60405190808252806020026020018201604052801561105357816020015b611040604051806060016040528060008152602001600081526020016000151581525090565b81526020019060019003908161101a5790505b50905060005b6004548110156110f857600560006004838154811061107a5761107a611a06565b60009182526020808320909101546001600160a01b0316835282810193909352604091820190208151606081018352815481526001820154938101939093526002015460ff1615159082015282518390839081106110da576110da611a06565b602002602001018190525080806110f090611a4a565b915050611059565b50919050565b611106611780565b60006006828154811061111b5761111b611a06565b60009182526020909120018054911515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff90921691909117905550565b611166611780565b61117060006117da565b565b600061117c611780565b604080518082019091526001600160a01b038084168252600160208301818152600680548084018255600082905294517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f909501805492511515600160a01b027fffffffffffffffffffffff00000000000000000000000000000000000000000090931695909416949094171790915590546112189190611b74565b90505b919050565b611228611780565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526005602090815260408083208151606081018352815481526001820154938101939093526002015460ff161580159183018290526112a557506002546001600160a01b03848116911614155b80156112bf57506001546001600160a01b03848116911614155b156110f8576040516370a0823160e01b815230600482015283906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561130d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113319190611a65565b9050801561152b57600a5460405163095ea7b360e01b81526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af115801561138c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b09190611a7e565b506003546001600160a01b0386811691161415611466576003546040517f02387a7b0000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff831660048201526001600160a01b03909116906302387a7b9060240160408051808303816000875af115801561143b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145f9190611ba1565b505061152b565b600a546002546040516313dcfc5960e01b8152600481018490526000602482018190526001600160a01b0392831660448301528883166064830152608482018190523060a48301524260c48301529291909116906313dcfc599060e4016000604051808303816000875af11580156114e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261150a9190810190611ab6565b90508060008151811061151f5761151f611a06565b60200260200101519450505b505050919050565b6006818154811061154357600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b900460ff1682565b6004818154811061157857600080fd5b6000918252602090912001546001600160a01b0316905081565b60045460609060009067ffffffffffffffff8111156115b3576115b3611aa0565b6040519080825280602002602001820160405280156115f857816020015b60408051808201909152600080825260208201528152602001906001900390816115d15790505b50905060005b6004548110156110f85760405180604001604052806004838154811061162657611626611a06565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b03168152602001600560006004858154811061166957611669611a06565b60009182526020808320909101546001600160a01b03168352820192909252604001902060010154905282518390839081106116a7576116a7611a06565b602002602001018190525080806116bd90611a4a565b9150506115fe565b6116cd611780565b600d805482919060ff1916600183818111156116eb576116eb611863565b021790555050565b6116fb611780565b6001600160a01b0381166117775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610573565b610993816117da565b6000546001600160a01b031633146111705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610573565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461121b57600080fd5b60006020828403121561185357600080fd5b61185c8261182a565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061189b57634e487b7160e01b600052602160045260246000fd5b91905290565b602080825282518282018190526000919060409081850190868401855b828110156118f4576118e484835180516001600160a01b03168252602090810151910152565b92840192908501906001016118be565b5091979650505050505050565b6000806040838503121561191457600080fd5b61191d8361182a565b946020939093013593505050565b602080825282518282018190526000919060409081850190868401855b828110156118f457815180518552868101518786015285015115158585015260609093019290850190600101611948565b60006020828403121561198b57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b828110156118f4576119d584835180516001600160a01b03168252602090810151910152565b92840192908501906001016119af565b6000602082840312156119f757600080fd5b81356002811061185c57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611a4557611a45611a1c565b500190565b6000600019821415611a5e57611a5e611a1c565b5060010190565b600060208284031215611a7757600080fd5b5051919050565b600060208284031215611a9057600080fd5b8151801515811461185c57600080fd5b634e487b7160e01b600052604160045260246000fd5b60006020808385031215611ac957600080fd5b825167ffffffffffffffff80821115611ae157600080fd5b818501915085601f830112611af557600080fd5b815181811115611b0757611b07611aa0565b8060051b604051601f19603f83011681018181108582111715611b2c57611b2c611aa0565b604052918252848201925083810185019188831115611b4a57600080fd5b938501935b82851015611b6857845184529385019392850192611b4f565b98975050505050505050565b600082821015611b8657611b86611a1c565b500390565b634e487b7160e01b600052603160045260246000fd5b60008060408385031215611bb457600080fd5b50508051602090910151909290915056fea2646970667358221220f538f0019274d1f901a2459b58c91c559608411817bb20d5e0923a1099a1b62564736f6c634300080b0033";

export class Collector__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _beto: string,
    _note: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Collector> {
    return super.deploy(
      _beto,
      _note,
      _router,
      overrides || {}
    ) as Promise<Collector>;
  }
  getDeployTransaction(
    _beto: string,
    _note: string,
    _router: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_beto, _note, _router, overrides || {});
  }
  attach(address: string): Collector {
    return super.attach(address) as Collector;
  }
  connect(signer: Signer): Collector__factory {
    return super.connect(signer) as Collector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectorInterface {
    return new utils.Interface(_abi) as CollectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collector {
    return new Contract(address, _abi, signerOrProvider) as Collector;
  }
}
