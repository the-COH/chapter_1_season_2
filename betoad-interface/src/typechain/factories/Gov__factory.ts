/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Gov, GovInterface } from "../Gov";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61082e8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b578063a516a5bf1461007b578063f2fde38b1461009b575b600080fd5b6100596100ae565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b61008e6100893660046105a6565b6100c2565b60405161007291906106e6565b6100596100a9366004610748565b610239565b6100b66102ce565b6100c06000610328565b565b60606100cc6102ce565b835167ffffffffffffffff8111156100e6576100e66103d0565b60405190808252806020026020018201604052801561011957816020015b60608152602001906001900390816101045790505b50905060006040518060600160405280602781526020016107d260279139905060005b85518110156102305760008087838151811061015a5761015a610763565b60200260200101516001600160a01b031687848151811061017d5761017d610763565b602002602001015187858151811061019757610197610763565b60200260200101516040516101ac9190610779565b60006040518083038185875af1925050503d80600081146101e9576040519150601f19603f3d011682016040523d82523d6000602084013e6101ee565b606091505b50915091506101fe828286610390565b508085848151811061021257610212610763565b602002602001018190525050508061022990610795565b905061013c565b50509392505050565b6102416102ce565b6001600160a01b0381166102c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102cb81610328565b50565b6000546001600160a01b031633146100c05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b9565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060831561039f5750816103c9565b8251156103af5782518084602001fd5b8160405162461bcd60e51b81526004016102b991906107be565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561040f5761040f6103d0565b604052919050565b600067ffffffffffffffff821115610431576104316103d0565b5060051b60200190565b80356001600160a01b038116811461045257600080fd5b919050565b600082601f83011261046857600080fd5b8135602061047d61047883610417565b6103e6565b82815260059290921b8401810191818101908684111561049c57600080fd5b8286015b848110156104b757803583529183019183016104a0565b509695505050505050565b6000601f83818401126104d457600080fd5b823560206104e461047883610417565b82815260059290921b8501810191818101908784111561050357600080fd5b8287015b8481101561059a57803567ffffffffffffffff808211156105285760008081fd5b818a0191508a603f83011261053d5760008081fd5b85820135604082821115610553576105536103d0565b610564828b01601f191689016103e6565b92508183528c8183860101111561057b5760008081fd5b8181850189850137506000908201870152845250918301918301610507565b50979650505050505050565b6000806000606084860312156105bb57600080fd5b833567ffffffffffffffff808211156105d357600080fd5b818601915086601f8301126105e757600080fd5b813560206105f761047883610417565b82815260059290921b8401810191818101908a84111561061657600080fd5b948201945b8386101561063b5761062c8661043b565b8252948201949082019061061b565b9750508701359250508082111561065157600080fd5b61065d87838801610457565b9350604086013591508082111561067357600080fd5b50610680868287016104c2565b9150509250925092565b60005b838110156106a557818101518382015260200161068d565b838111156106b4576000848401525b50505050565b600081518084526106d281602086016020860161068a565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561073b57603f198886030184526107298583516106ba565b9450928501929085019060010161070d565b5092979650505050505050565b60006020828403121561075a57600080fd5b6103c98261043b565b634e487b7160e01b600052603260045260246000fd5b6000825161078b81846020870161068a565b9190910192915050565b60006000198214156107b757634e487b7160e01b600052601160045260246000fd5b5060010190565b6020815260006103c960208301846106ba56fe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765a2646970667358221220bcc0b0c9aa0d3d1993909430e7d4f796fad993e1fcaf65458c8523b7c02031e564736f6c634300080b0033";

export class Gov__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Gov> {
    return super.deploy(overrides || {}) as Promise<Gov>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Gov {
    return super.attach(address) as Gov;
  }
  connect(signer: Signer): Gov__factory {
    return super.connect(signer) as Gov__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovInterface {
    return new utils.Interface(_abi) as GovInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Gov {
    return new Contract(address, _abi, signerOrProvider) as Gov;
  }
}
