/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IDice, IDiceInterface } from "../IDice";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "randomKey",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "prediction",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isOver",
        type: "bool",
      },
    ],
    name: "bet",
    outputs: [
      {
        internalType: "uint256",
        name: "betId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IDice__factory {
  static readonly abi = _abi;
  static createInterface(): IDiceInterface {
    return new utils.Interface(_abi) as IDiceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IDice {
    return new Contract(address, _abi, signerOrProvider) as IDice;
  }
}
